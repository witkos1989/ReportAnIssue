@model ReportAnIssue.ViewModels.IssuesViewModel

<style type="text/css">
    .file_input_div {
        position: relative;
        width: 80px;
        overflow: hidden;
    }

    .file_input_hidden {
        font-size: 45px;
        position: absolute;
        right: 0px;
        top: 0px;
        cursor: pointer;
        opacity: 0;
        filter: alpha(opacity=0);
        -ms-filter: "alpha(opacity=0)";
        -khtml-opacity: 0;
        -moz-opacity: 0;
    }
</style>

@using (Html.BeginForm("Create", "Issue", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Dodaj usterkę</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, "Tytuł", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InventoryNumber, "Nr inwentarzowy", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InventoryNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InventoryNumber, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.TypeId, "Typ usterki", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeId, Model.Types, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, "Opis", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 6, 40, new { @class = "form-control form-textarea"})
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Attachment, "Załącznik", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<input type="file" id="Attachment" name="upload" class="btn btn-default" />*@
            <input type="text" id="fileName" class="form-control" readonly="readonly">
            <div class="file_input_div">
                <input id="fileInputButton" style="margin-top: 15px;" type="button" value="Szukaj" class=" btn btn-default" />
                <input type="file" name="upload" style="margin-top: 15px;" class="file_input_hidden"
                       onchange="javascript: document.getElementById('fileName').value = this.value"/>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.userName)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Dodaj usterkę" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Wróć", "Index", "Home")
</div>
